COLUMN_METADATA = {
    "Vehicles": {
        "Id": "integer, primary key, unique vehicle ID",
        "Vin": "string(17), required, unique vehicle identification number",
        "Make": "string(50), required, vehicle manufacturer",
        "Model": "string(50), required, vehicle model",
        "Year": "integer, required, range 1900 to 2100, manufacturing year",
        "Price": "decimal(10,2), required, vehicle listed price",
        "Mileage": "integer, required, total miles driven",
        "Color": "string(30), optional, exterior color",
        "FuelType": "string(20), optional, e.g. Petrol, Diesel, Hybrid, Electric",
        "Transmission": "string(20), optional, e.g. Automatic, Manual, CVT",
        "Status": "string(20), optional, vehicle availability status e.g. NEW, USED",
    },
    "Auctions": {
        "AuctionId": "integer, primary key, unique auction ID",
        "VehicleId": "integer, required, foreign key reference to Vehicles.Id",
        "StartUtc": "datetime, required, UTC timestamp when auction starts",
        "EndUtc": "datetime, required, UTC timestamp when auction ends",
        "StartingPrice": "decimal(10,2), required, initial bidding price",
        "CurrentPrice": "decimal(10,2), required, current highest bid price",
        "Status": "string(25), enum, required, auction lifecycle status e.g., Scheduled, PreviewMode, Active, Ended, Cancelled",
        "CreatedUtc": "datetime, required, UTC timestamp when auction was created",
        "UpdatedUtc": "datetime, required, UTC timestamp when auction was last updated",
        "ScheduledStartTime": "datetime, optional, scheduled start time for pre-launch visibility",
        "PreviewStartTime": "datetime, optional, preview visibility start time",
        "IsReserveMet": "boolean, indicates if the seller's reserve price has been met (actual reserve price remains confidential)",
    },
    "Bids": {
        "BidId": "integer, primary key, unique bid ID",
        "AuctionId": "integer, required, foreign key reference to Auctions.AuctionId",
        "UserId": "integer, required, foreign key reference to Users.Id",
        "Amount": "decimal(10,2), required, positive bid amount placed by the user",
        "IsAuto": "boolean, indicates if the bid was placed automatically by an auto-bid configuration",
        "CreatedUtc": "datetime, required, UTC timestamp when the bid was placed",
    },
    "AutoBids": {
        "Id": "integer, primary key, unique auto-bid ID",
        "UserId": "integer, required, foreign key reference to Users.Id",
        "AuctionId": "integer, required, foreign key reference to Auctions.AuctionId",
        "MaxBidAmount": "decimal(10,2), required, maximum amount the user is willing to bid automatically",
        "CurrentBidAmount": "decimal(10,2), current bid placed by the auto-bid logic",
        "IsActive": "boolean, indicates whether the auto-bid is currently active",
        "BidStrategyType": "enum, required, strategy used to place bids: Conservative, Aggressive, or Incremental",
        "CreatedAt": "datetime, required, UTC timestamp when the auto-bid was created",
        "UpdatedAt": "datetime, required, UTC timestamp when the auto-bid was last updated",
        "ExecutedAt": "datetime, optional, UTC timestamp when the auto-bid was executed, if applicable",
    },
     "BidStrategies": {
        "AuctionId": "integer, foreign key to Auctions table",
        "UserId": "integer, foreign key to Users table",
        "Type": "enum, bidding strategy type (Conservative, Aggressive, Incremental)",
        "BidDelaySeconds": "integer, delay before placing bids",
        "MaxBidsPerMinute": "integer, maximum allowed bids per minute",
        "MaxSpreadBids": "integer, optional, spread bids across time",
        "PreferredBidTiming": "enum, preferred timing (Immediate, LastMinute, SpreadEvenly)",
        "CreatedAt": "datetime(UTC), when strategy was created",
        "UpdatedAt": "datetime(UTC), when strategy was last updated",
    },
    "Users": {
        "Id": "integer, primary key, unique user ID",
        "Name": "string(40), required, user's full name",
        "Email": "string(25), required, unique user email",
        "CreatedUtc": "datetime(UTC), account creation timestamp",
        "LastLoggedIn": "datetime(UTC), last login timestamp",
        "Password": "string(100), required, hashed user password",
    },
    "UserSavedSearches": {
        "UserId": "integer, foreign key to Users.Id",
        "Search": "string, required, JSON or text representation of saved search criteria",
    },
    "UserInteractions": {
        "Id": "integer, primary key, unique interaction ID",
        "UserId": "integer, required, foreign key to Users.Id",
        "VehicleId": "integer, required, foreign key to Vehicles.Id",
        "InteractionType": "string(50), required, type of interaction e.g. View, Click, Favorite",
        "CreatedAt": "datetime, required, UTC timestamp when the interaction was recorded",
    },
    "Watchlists": {
        "WatchlistId": "integer, primary key, unique watchlist entry ID",
        "UserId": "integer, required, foreign key to Users.Id",
        "AuctionId": "integer, required, foreign key to Auctions.AuctionId",
        "CreatedUtc": "datetime, required, UTC timestamp when the watchlist entry was created",
    },
    "AuctionAnalytics": {
        "Id": "integer, primary key, unique analytics record ID",
        "AuctionId": "integer, required, foreign key to Auctions.AuctionId",
        "TotalViews": "integer, total number of views the auction received",
        "UniqueBidders": "integer, number of unique users who placed bids",
        "TotalBids": "integer, total number of bids placed during the auction",
        "CompletionStatus": "boolean, indicates if the auction was successfully completed",
        "StartPrice": "decimal(10,2), starting price of the auctioned vehicle",
        "FinalPrice": "decimal(10,2), final closing price of the auction",
        "EngagementScore": "double, calculated user engagement metric",
        "UpdatedAt": "datetime, UTC timestamp when the analytics record was last updated",
    },
    "AnalyticsEvents": {
        "Id": "integer, primary key, unique event ID",
        "EventType": "enum, type of event e.g., AuctionView, BidPlaced, AuctionCompleted, PaymentCompleted",
        "UserId": "integer, optional, foreign key to Users.Id, user associated with event",
        "AuctionId": "integer, optional, foreign key to Auctions.AuctionId, auction associated with event",
        "EventData": "string, optional metadata or payload describing the event (e.g., bid amount, browser info)",
        "Source": "enum, optional, source of the event e.g., Web, Mobile, API",
        "CreatedAt": "datetime, UTC timestamp when the event was created",
    }

}
